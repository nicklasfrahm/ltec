name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  APP: ltec

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - uses: gwatts/go-coverage-action@v2
        with:
          cover-pkg: ./...
          fail-coverage: never

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: true
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Create release
        uses: docker://ghcr.io/codfish/semantic-release-action:v3
        id: semantic
        with:
          dry-run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: ARCH=${{ matrix.arch }} VERSION=${{ steps.semantic.outputs.git-tag }} make build

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.arch }}
          path: bin/**

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - lint
      - test
      - build
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin
          merge-multiple: true

      - name: Stage artifacts
        run: mkdir -p release && mv bin/* release/

      - name: Create release
        uses: docker://ghcr.io/codfish/semantic-release-action:v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
